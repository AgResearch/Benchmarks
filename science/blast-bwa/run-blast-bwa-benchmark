#!/bin/sh
# needs to run in conda environment abyss

test -n "$INPUT_DATA_ROOT_DIR" || {
    echo >&2 "fatal error: missing environment variable INPUT_DATA_ROOT_DIR - source the top-level environment file"
    exit 1
}
test -n "$OUTPUT_DATA_ROOT_DIR" || {
    echo >&2 "fatal error: missing environment variable OUTPUT_DATA_ROOT_DIR - source the top-level environment file"
    exit 1
}

datadir=$INPUT_DATA_ROOT_DIR/blast-bwa
outdir=$OUTPUT_DATA_ROOT_DIR/blast-bwa

test -d "$datadir" || {
    echo >&2 "fatal error: missing data directory $datadir - unpack the data tarball"
    exit 1
}

mkdir -p "$outdir" || {
    echo >&2 "fatal error: failed to create output directory $outdir"
    exit 1
}

rm -rf "$outdir"/*

# check all expected programs available
for prog in gbsx bwa samtools; do
    type $prog >/dev/null 2>&1 || {
        echo >&2 "fatal error: $prog not found - did you create and activate the blast-bwa conda environment?"
        exit 1
    }
done

#seqbase=SQ0093_C6JPWANXX_s_5_fastq.txt
seqbase=small_fastq.txt

# Use GBSX to demultiplex
demultidir="$outdir/${seqbase}.gz_demulti"

echo "gbsx $seqbase"
time gbsx --Demultiplexer -f1 $datadir/${seqbase}.gz -i $datadir/${seqbase}.gz.info -o $demultidir -lf true -gzip true -mb 0 -me 0 -n false -t $NCORES 1>$outdir/gbsx.log 2>&1

# align using bwa
bwadir="$outdir/bwa"
mkdir -p "$bwadir"
nfiles=`ls $demultidir/*.fastq.gz | wc -l`
i=0
for fastq in `ls $demultidir/*.fastq.gz`; do
    i=$((i + 1))
    name=`echo $fastq | sed -e 's,^.*/\([^/]*\)$,\1,' -e 's,_.*$,,'`
    echo "bwa $name ($i of $nfiles)"
    time bwa mem -t 1 -R "@RG\\tID:$name\\tSM:$name" "$datadir/Oar_v3.1.fa" "$fastq" 2>$bwadir/$name.bwa.log | samtools view -b -S -u -T $datadir/Oar_v3.1.fa -q 30 - | samtools sort -@ 1 - -o $bwadir/$name.bam >"$bwadir/$name.out" 2>"$bwadir/$name.out"
  # remove empty output files
  test -s "$bwadir/$name.out" || rm -f "$bwadir/$name.out"
  test -s "$bwadir/$name.err" || rm -f "$bwadir/$name.err"
done

# align using blast
blastdir="$outdir/blast"
mkdir -p "$blastdir"
nfiles=`ls $demultidir/*.fastq.gz | wc -l`
i=0
for fastq in `ls $demultidir/*.fastq.gz`; do
    i=$((i + 1))
    name=`echo $fastq | sed -e 's,^.*/\([^/]*\)$,\1,' -e 's,_.*$,,'`
    echo "blast $name ($i of $nfiles)"
    zcat "$fastq" | fastq_to_fasta -r -o "$blastdir/$name.fa"
    time blastn -task blastn -query "$blastdir/$name.fa" -db nt -evalue 1.0e-10 -dust '20 64 1' -max_target_seqs 1 -outfmt '7 qseqid sseqid pident evalue staxids sscinames scomnames sskingdoms stitle' -out "$blastdir/$name.blast" >"$blastdir/$name.out" 2>"$blastdir/$name.err"
    # remove empty output files
    test -s "$blastdir/$name.out" || rm -f "$blastdir/$name.out"
    test -s "$blastdir/$name.err" || rm -f "$blastdir/$name.err"
done
