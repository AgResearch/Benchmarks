#!/bin/sh
# needs to run in conda environment velvet

if [ -z $1 ];
then
    	echo >&2 "fatal error: mising argument 1 - total memory allocate to the run in GB"
        exit 1
fi

if ! [[ $1 =~ ^[0-9]+$ ]];
then
    	echo >&2 "fatal error: incorrect format for argument 1. It should be an integer"
        exit 1
fi

test -n "$INPUT_DATA_ROOT_DIR" || {
    echo >&2 "fatal error: missing environment variable INPUT_DATA_ROOT_DIR - source the top-level environment file"
    exit 1
}
test -n "$OUTPUT_DATA_ROOT_DIR" || {
    echo >&2 "fatal error: missing environment variable OUTPUT_DATA_ROOT_DIR - source the top-level environment file"
    exit 1
}

datadir=$INPUT_DATA_ROOT_DIR/velvet
outdir=$OUTPUT_DATA_ROOT_DIR/velvet
test -d "$datadir" || {
    echo >&2 "fatal error: missing data directory $datadir - unpack the data tarball"
    exit 1
}

mkdir -p "$outdir" || {
    echo >&2 "fatal error: failed to create output directory $outdir"
    exit 1
}

echo "========== Removing output from the previous run ===="
rm -rf "$outdir"/*

cd $outdir
echo "========== unzipping fastq files ===================="
for zipfile in `cd $datadir; ls *.fastq.gz`; do
    fastq=`basename $zipfile .gz`
    time gunzip -c $datadir/$zipfile >$fastq
done
echo

echo "========== running VelvetOptimiser ===================="
allocated_memory=$1
num_instance=$((allocated_memory/32))

time VelvetOptimiser.pl -t $num_instance -s 131 -e 231 -f '-shortPaired -fastq -separate SRR5420176_1.fastq SRR5420176_2.fastq'
